substitutions:

  friendly_name: "Shelf Sensors"
#  reboot_timeout_wifi: 900s
#  reboot_timeout_api: 1800s 

esphome:
  name: shelfsensors

esp8266:
  board: d1_mini

# Enable logging
logger: 
#  level: debug
# Enable Home Assistant API
api:
  encryption:
    key: "S/9TR3qvT4iWEhcArUTYc+N9VMWaRdR+eeKpmnVpcWs="

ota:
  password: "49ce935336c03777452d84d3dacab63d"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.2.13
    gateway: 192.168.2.254
    subnet: 255.255.255.0
  ap:
    ssid: "${friendly_name} Hotspot"
    password: !secret wifi_password
captive_portal:

web_server:
  port: 80


remote_receiver:
   pin:
    number: D2
    inverted: true
   dump: all

remote_transmitter:
   pin: D7 
   carrier_duty_percent: 50%
    
binary_sensor:
  - platform: gpio
    pin: D8
    name: "Living Room Motion Sensor"
    device_class: motion
    
  - platform: gpio
    pin: D3
    name: "Hall Motion Sensor"
    device_class: motion   

  - platform: status
    name: Shelf Sensors Wifi
    id: wifi_status
    
sensor:


  - platform: dht
    model: DHT22
    pin: D1
    temperature:
      name: "${friendly_name} Temperature"
      filters:
      - offset: -6.0
    humidity:
      name: "${friendly_name} Humidity"
    update_interval: 60s
    
  - platform: uptime
    name: ${friendly_name} Uptime
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_secs
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();   
              
text_sensor:
  - platform: version
    name: ${friendly_name} Version

  - platform: template
    name: ${friendly_name} Uptime in seconds
    id: uptime_secs
    icon: mdi:clock-start    
switch:
        
  - platform: restart
    name: ${friendly_name} Restart

button:
  - platform: template
    name: "TV Turn Off"
    on_press:
      remote_transmitter.transmit_rc5:
        address: 0x00
        command: 0x0C

  - platform: template
    name: "TV Mute"
    on_press:
      remote_transmitter.transmit_rc5:
        address: 0x00
        command: 0x0D

  - platform: template
    name: "TV Volume Up"
    on_press:
      remote_transmitter.transmit_rc5:
        address: 0x00
        command: 0x15
        repeat:
         times: 2
         wait_time: 50ms

  - platform: template
    name: "TV Volume Down"
    on_press:
      remote_transmitter.transmit_rc5:
        address: 0x00
        command: 0x14

  - platform: template
    name: "TV Volume OK"
    on_press:
      remote_transmitter.transmit_rc5:
        address: 0x00
        command: 0x26
